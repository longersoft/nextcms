<?php
/**
 * NextCMS
 * 
 * @author		Nguyen Huu Phuoc <thenextcms@gmail.com>
 * @copyright	Copyright (c) 2011 - 2012, Nguyen Huu Phuoc
 * @license		http://nextcms.org/license.txt	(GNU GPL version 2 or later)
 * @link		http://nextcms.org
 * @category	modules
 * @package		core
 * @subpackage	controllers
 * @since		1.0
 * @version		2012-04-27
 */

defined('APP_VALID_REQUEST') || die('You cannot access the script directly.');

/**
 * Allows user to put the content generated by a placeholder to the top or bottom of page
 */
class Core_Controllers_Plugins_PlaceHolder extends Zend_Controller_Plugin_Abstract 
{
	/**
	 * @var string
	 */
	const HEAD_TOP    = 'head_top';
	
	/**
	 * @var string
	 */
	const HEAD_BOTTOM = 'head_bottom';
	
	/**
	 * @var string
	 */
	const BODY_TOP    = 'body_top';
	
	/**
	 * @var string
	 */
	const BODY_BOTTOM = 'body_bottom';
	
	/**
	 * Name of container
	 * 
	 * @var string
	 */
	private $_name;
	
	/**
	 * The position that content of container will be shown
	 * 
	 * @var string
	 */
	private $_position;
	
	public function __construct($name, $position = self::HEAD_BOTTOM)
	{
		$this->_name     = $name;
		$this->_position = $position;
	}
	
	/**
	 * @see Zend_Controller_Plugin_Abstract::dispatchLoopShutdown()
	 */
	public function dispatchLoopShutdown()
	{
		if ($this->getRequest()->isXmlHttpRequest()) {
			return;
		}
		
		// Get the view instance
		$view	 = Zend_Controller_Action_HelperBroker::getStaticHelper('viewRenderer')->view;
		$content = $view->placeholder($this->_name);
		
		// Put the content into head section
		$response = $this->getResponse();
		$body	  = $response->getBody();
		
		switch ($this->_position) {
			case self::HEAD_TOP:
				$response->setBody(preg_replace('/(</head.*>)/i', '$1' . $content, $body));
				break;
			case self::HEAD_BOTTOM:
				$response->setBody(preg_replace('/(.*<\/head>)/i', $content . '$1', $body));
				break;
			case self::BODY_TOP:
				$response->setBody(preg_replace('/(</body.*>)/i', '$1' . $content, $body));
				break;
			case self::BODY_BOTTOM:
				$response->setBody(preg_replace('/(.*<\/body>)/i', $content . '$1', $body));
				break;
		}
	}
}
